{
  "C": {
    "easy": [
      {
        "question": "What is the difference between #include <stdio.h> and #include 'stdio.h'?",
        "answer": "#include <stdio.h> tells the compiler to look in the system libraries, #include 'stdio.h' tells it to look in the current directory first, then system libraries."
      }, 
      {
        "question": "Write a program to check if a number is odd or even.",
        "answer": "#include <stdio.h> int main() { int num; printf('Enter a number: '); scanf('%d', &num); if (num % 2 == 0) printf('%d is Even.\n', num); else  printf('%d is Odd.\n', num); return 0; }"
      },
      {
        "question": "Define a pointer and give an example.",
        "answer": "A pointer is a variable that stores the memory address of another variable. example: #include <stdio.h> int main() { int num = 10; int *ptr = &num; printf('Value of num = num = %d\n', *ptr); printf('Address of num = %p\n', ptr); return 0; }"
      },
      {
        "question": "What is the size of int, float, char and double in C ?",
        "answer": "int = 4 bytes, float = 4 bytes, char = 1 byte, double = 8 bytes"
      },
      {"question": "Explain the purpose of scanf() and printf().", 
        "answer": "scanf() reads input from the user, printf() displays output to the user."
      },
      {
        "question": "What is a function in C ?",
        "answer" : "A function in C is a block of code that performs a specific task and can be reused whenever needed."
      }
    ],
    "medium": [
      {"question": "Write a function to find the factorial of a number using recursion.", 
        "answer": "#include <stdio.h> int factorial(int n) { if (n == 0 || n == 1) return 1; else return n * factorial(n-1); } int main() { int num; printf('enter a number: '); scanf('%d', &num); printf('Factorial of %d is %d\n", num, factorial(num)); return 0; }"
      },
      {
        "question": "Explain the difference between a structure and a union.", 
        "answer": "A 'structure' stores data in separate memory locations for each member.  A 'union' shares the same memory location for all members, holding only one value at a time."
      },
      {
        "question": "Implement a program to reverse a string without using a library function.", 
        "answer": "#include <stdio.h> void reverseString(char str[]) { int start = 0, end = 0; while (str[end] != '\\0') { end++; } end--; while (start < end) { char temp = str[start]; str[start] = str[end]; str[end] = temp; start++; end--; } } int main() { char str[100]; printf(\"Enter a string: \"); gets(str); reverseString(str); printf(\"Reversed String: %s\\n\", str); return 0; }"
      },
      {
        "question": "What are storage classes in C ?",
        "answer": "Storage classes in C determine the scope, lifetime, and visibility of variables: 1.auto: Default local variable, automatic storage. 2.register: Suggests storing in a register for fast access. 3.static: Retains value between function calls, limited scope. 4. extern: Refers to variables defined outside the file."
      },
      {
        "question": "Explain stack and heap memory.", 
        "answer": "Stack: Stores local variables, fast, limited size. Heap: Stores dynamic variables, slower, larger size."
      },
      {
        "question": "What is a segmentation fault?", 
        "answer": "A segmentation fault occurs when a program tries to access memory it isn't allowed to, such as dereferencing a null pointer or accessing out-of-bounds array elements."
      }
    ],
    "hard": [
       {
         "question": "Implement a stack using an array.", 
         "answer": "#include <stdio.h> #define MAX 10 int stack[MAX]; int top = -1; void push(int value) { if (top< MAX - 1) { stack[++top] = value; } else { printf ('Stack Overflow\n'); } } int pop() { if (top > = 0) { return stack[top--]; } else { printf ('Stack underflow\n'); return -1; } } int peek() { if (top >= 0) { return stack[top]; } else { printf('Stack is empty\n'); return -1; } } int main() { push(10); push (20); printf('Top element: %d\n', peek()); printf('popped element: %d\n', pop()); return 0; }"
       },
       {
         "question": "Explain memory leaks and how to avoid them in C ?", 
         "answer": "A memory leak happens when memory is allocated but not freed. To avoid: Always use free().Check for null pointers. example: int *ptr = malloc(sizeof(int)); free(ptr);"
       },
       {
         "question": "Write a program to sort an array using quicksort.", 
         "answer": "#include <stdio.h> void swap(int *a, int *b) { int temp = *a; *a = *b; *b = temp; } int partition(int arr[], int low, int high) { int pivot = arr[high], i = low - 1; for (int j = low; j < high; j++) if (arr[j] < pivot) swap(&arr[++i], &arr[j]); swap(&arr[i + 1], &arr[high]); return i + 1; } void quicksort(int arr[], int low, int high) { if (low < high) { int pi = partition(arr, low, high); quicksort(arr, low, pi - 1); quicksort(arr, pi + 1, high); } } int main() { int arr[] = {10, 7, 8, 9, 1, 5}; quicksort(arr, 0, 5); for (int i = 0; i < 6; i++) printf('%d ', arr[i]); return 0; } "
       },
       {
         "question": "What is pointer arithmetic?", 
         "answer": "Pointer arithmetic in C allows you to manipulate pointers to navigate through memory, like incrementing (ptr++), decrementing (ptr--), and adding/subtracting with integers. It helps to move between array elements efficiently."
       },
       {"question": "How would you simulate object-oriented programming in C?", 
         "answer": "#include <stdio.h> struct main() return 0; "
       },
       {
         "question": "Explain the working of function pointers.", 
         "answer" : "Function pointers store a function's address, enabling dynamic function calls. example: void greet() { printf('  '); } int main() {  return 0; }"
       }
    ]
  },
  "C++": {
    "easy": [
      {"question": "What is the difference between C and C++?"},
      {"question": "Define a class and an object with a simple example."},
      {"question": "Explain the concept of function overloading."},
      {"question": "What is a constructor and destructor?"},
      {"question": "What is the use of the 'this' pointer?"},
      {"question": "Write a program to display 'Hello, World!' using a class."}
    ],
    "medium": [
       {"question": "Implement a class with getter and setter methods."},
       {"question": "Explain inheritance with a practical example."},
       {"question": "What are templates in C++?"},
       {"question": "What is operator overloading? Give an example."},
       {"question": "How is memory managed in C++?"},
       {"question": "What are the differences between deep copy and shallow copy?"}
    ],
    "hard": [
      {"question": "Implement a linked list using classes."},
      {"question": "Explain virtual functions and pure virtual functions."},
      {"question": "How does polymorphism work in C++?"},
      {"question": "What is the role of std::move and rvalue references?"},
      {"question": "Implement a basic LRU Cache using STL."},
      {"question": "Discuss RAII (Resource Acquisition Is Initialization)."}
    ]
  },
  "Java": {
    "easy": [
      {"question": "What is the JVM and how is it different from JRE and JDK?"},
      {"question": "What is the difference between == and .equals()?"},
      {"question": "Write a Java program to check if a number is prime."},
      {"question": "Define a class and create an object in Java."},
      {"question": "What is the purpose of the main() method?"},
      {"question": "What are primitive data types in Java?"}
    ],
    "medium": [
      {"question": "Explain the concept of inheritance with an example."},
      {"question": "Implement a simple class hierarchy for animals."},
      {"question": "What are the differences between an interface and an abstract class?"},
      {"question": "What is exception handling in Java?"},
      {"question": "Write a method to reverse a string using a StringBuilder."},
      {"question": "How does garbage collection work in Java?"}
    ],
    "hard": [
      {"question": "Implement a custom exception in Java."},
      {"question": "Write a program to implement multithreading using Runnable."},
      {"question": "How does the JVM optimize bytecode execution?"},
      {"question": "Implement a Singleton design pattern."},
      {"question": "What is the purpose of the volatile keyword?"},
      {"question": "Implement a producer-consumer problem using threads."}
    ]
  },
  "Python": {
    "easy": [
      {"question": "What are Python's key data types?"},
      {"question": "Write a Python program to check if a string is a palindrome."},
      {"question": "What's the difference between list and tuple?"},
      {"question": "What is indentation and why is it important?"},
      {"question": "Write a function to count vowels in a string."},
      {"question": "What is the use of if __name__ == '__main__'?"}
    ],
    "medium": [
      {"question": "Write a function to find duplicate elements in a list."},
      {"question": "What is a lambda function? Give an example."},
      {"question": "Explain the difference between deepcopy() and copy()."},
      {"question": "Implement a dictionary-based frequency counter."},
      {"question": "What are decorators? Write a sample."},
      {"question": "When would you use a generator instead of a list?"}
    ],
    "hard": [
      {"question": "Implement a class with inheritance and method overriding."},
      {"question": "Optimize code that parses a huge log file and extracts data."},
      {"question": "How does Python manage memory?"},
      {"question": "Write a mini project like a to-do list CLI app."},
      {"question": "What are metaclasses? When are they useful?"},
      {"question": "Create a multi-threaded app using threading and queue."}
    ]
  },
  "Python for Data analysis/science": {
    "easy": [
      {"question": "What are pandas, numpy, and matplotlib used for?"},
      {"question": "How do you load a CSV file using pandas?"},
      {"question": "Write a code to calculate the mean of a numeric column."},
      {"question": "What is the shape of a DataFrame?"},
      {"question": "How do you handle missing values in pandas?"},
      {"question": "How do you filter rows based on a condition?"}
    ],
    "medium": [
      {"question": "Create a histogram for a dataset column using matplotlib."},
      {"question": "Explain the difference between .loc[] and .iloc[]"},
      {"question": "Write a function to normalize a numeric column."},
      {"question": "How do you detect and remove duplicates?"},
      {"question": "What is the role of groupby() in pandas?"},
      {"question": "How do you merge two DataFrames?"}
    ],
    "hard": [
      {"question": "Perform EDA on a dataset and summarize findings."},
      {"question": "Optimize a data pipeline for real-time analytics."},
      {"question": "Implement a regression model using scikit-learn."},
      {"question": "Create a dashboard using Plotly or Streamlit."},
      {"question": "How would you handle a dataset with 1M+ rows efficiently?"},
      {"question": "How do you identify and treat outliers?"}
    ]
  },
  "HTML & CSS": {
    "easy": [
      {"question": "What is the purpose of the <head> tag?"},
      {"question": "Write the HTML to create a simple table."},
      {"question": "What’s the difference between id and class?"},
      {"question": "How do you add a CSS file to your HTML?"},
      {"question": "Write CSS to change text color to blue."},
      {"question": "What does the alt attribute in <img> do?"}
    ],
    "medium": [
      {"question": "Create a responsive layout using flexbox."},
      {"question": "How do pseudo-classes like :hover and :nth-child() work?"},
      {"question": "What are media queries? Write an example."},
      {"question": "Build a card layout with shadow and hover animation."},
      {"question": "Differentiate between inline, internal, and external CSS."},
      {"question": "How does z-index work in layered design?"}
    ],
    "hard": [
      {"question": "Build a responsive portfolio layout using grid + flexbox."},
      {"question": "Implement a pure CSS dropdown menu."},
      {"question": "Create an animated loading spinner using keyframes."},
      {"question": "Design a sticky navbar that changes style on scroll."},
      {"question": "Explain the CSS box model with debugging techniques."},
      {"question": "Code a custom CSS modal popup with animation."}
    ]
  },
  "JavaScript": {
    "easy": [
      {"question": "What is the difference between var, let, and const?"},
      {"question": "Write a function to reverse a string."},
      {"question": "What are JavaScript data types?"},
      {"question": "How do you add an event listener to a button?"},
      {"question": "Explain == vs ===."},
      {"question": "What is NaN?"}
    ],
    "medium": [
      {"question": "Explain closures with an example."},
      {"question": "How does event bubbling work?"},
      {"question": "Write a debounce function."},
      {"question": "What is the use of Promise? Write a sample."},
      {"question": "Implement a simple to-do list with add/delete."},
      {"question": "How does hoisting work?"}
    ],
    "hard": [
      {"question": "Implement a throttling mechanism for API calls."},
      {"question": "Write a mini game like Tic-Tac-Toe."},
      {"question": "Use async/await to fetch and render API data."},
      {"question": "Build a basic custom implementation of bind() method."},
      {"question": "Optimize a JS-heavy webpage for performance."},
      {"question": "Implement drag-and-drop from scratch."}
    ]
  },
  "TypeScript": {
    "easy": [
      {"question": "What is TypeScript and how is it different from JS?"},
      {"question": "How do you define a variable with a type in TS?"},
      {"question": "Write a simple function with typed parameters."},
      {"question": "What are interfaces in TypeScript?"},
      {"question": "How do you compile TS to JS?"},
      {"question": "What is a TypeScript class?"}
    ],
    "medium": [
      {"question": "Implement a generic function."},
      {"question": "What are enums and when should you use them?"},
      {"question": "What is the 'never' type used for?"},
      {"question": "How do you handle optional parameters in TypeScript?"},
      {"question": "Explain TypeScript's type inference."},
      {"question": "Implement a class with inheritance in TypeScript."}
    ],
    "hard": [
      {"question": "Explain the concept of 'type guards' in TypeScript."},
      {"question": "Create a type-safe event emitter."},
      {"question": "How do you manage multiple TS modules in a project?"},
      {"question": "Write a function to dynamically type a value based on input."},
      {"question": "What are mapped types and when are they useful?"},
      {"question": "Design a type-safe API client in TypeScript."}
    ]
  },
  "SQL (with PL/SQL & T-SQL)": {
  "easy": [
    {"question": "What is the difference between WHERE and HAVING?"},
    {"question": "Write a SQL query to retrieve all records from a table named Employees."},
    {"question": "What does GROUP BY do?"},
    {"question": "What is the difference between INNER JOIN and LEFT JOIN?"},
    {"question": "What does NULL mean in SQL?"},
    {"question": "What is a primary key?"}
  ],
  "medium": [
    {"question": "Write a query to get the 2nd highest salary from a Salaries table."},
    {"question": "Explain normalization and its types."},
    {"question": "Write a PL/SQL block to insert a record into a table."},
    {"question": "What are cursors in PL/SQL? Write an example."},
    {"question": "What is a stored procedure? Write a basic one."},
    {"question": "How does T-SQL differ from standard SQL?"}
  ],
  "hard": [
    {"question": "Write a T-SQL script with exception handling."},
    {"question": "Use a PL/SQL cursor and loop to update multiple rows."},
    {"question": "Create a trigger that logs insertions into an audit table."},
    {"question": "Implement a recursive query using CTE (Common Table Expression)."},
    {"question": "Optimize a slow SQL query with indexes and explain plan."},
    {"question": "Write a PL/SQL function that returns the count of employees in a department."}
  ]
},
"Bash/Shell": {
  "easy": [
    {"question": "What is the difference between a shell and the terminal?"},
    {"question": "Write a shell command to display the current working directory."},
    {"question": "What is the purpose of the 'chmod' command?"},
    {"question": "How do you create a file in the shell?"},
    {"question": "What does 'ls' do in bash?"}
  ],
  "medium": [
    {"question": "Write a shell script to count the number of files in a directory."},
    {"question": "What is the difference between 'grep' and 'find'?"},
    {"question": "Write a shell script to display the current date and time."},
    {"question": "What does 'awk' do in shell scripting? Give an example."},
    {"question": "How do you handle arguments passed to a shell script?"}
  ],
  "hard": [
    {"question": "Write a shell script to backup files from one directory to another."},
    {"question": "Explain how to use sed for text substitution in a file."},
    {"question": "Write a shell script to automate system updates."},
    {"question": "How would you schedule a script to run every day at 8 AM using cron?"},
    {"question": "Write a shell script that accepts input from the user and executes a command based on it."}
  ]
},
"motivational_quotes": [
  "The only way to do great work is to love what you do.",
  "Success is not final, failure is not fatal: it is the courage to continue that counts.",
  "Believe you can and you're halfway there.",
  "Mistakes are proof that you are trying. Keep going!",
  "Failure is not the opposite of success, it’s part of it.",
  "Every expert was once a beginner. You’ve got this!",
  "You didn’t lose, you learned. Come back stronger tomorrow!",
  "Small progress is still progress. Your journey matters.",
  "It’s not about being the best today. It’s about being better than yesterday.",
  "One step back is just the setup for a stronger comeback.",
  "Your potential is greater than one quiz result. Keep pushing!",
  "You’re not failing. You’re becoming.",
  "Great things take time. Stay consistent, and success will follow."
]
}
